{
  "name": "Uirusu",
  "tagline": "A rubygem for interacting with Virustotal.com's public API v2",
  "body": "# uirusu [![Gem Version](https://badge.fury.io/rb/uirusu.png)](http://badge.fury.io/rb/uirusu) [![Build Status](https://travis-ci.org/arxopia/uirusu.svg)](https://travis-ci.org/arxopia/uirusu) [![Code Climate](https://codeclimate.com/github/arxopia/uirusu/badges/gpa.svg)](https://codeclimate.com/github/arxopia/uirusu) [![Inline docs](http://inch-ci.org/github/arxopia/uirusu.svg?branch=master)](http://inch-ci.org/github/arxopia/uirusu)\r\n\r\nuirusu is an [Virustotal](http://www.virustotal.com) automation and convenience tool for hash, file and URL submission.\r\n\r\nThe current version is 1.0.2.\r\n\r\n## Requirements\r\n\r\n* ruby 2.0+\r\n* json\r\n* rest-client\r\n* **public api key from [virustotal.com](http://www.virustotal.com)**\r\n\r\n## Installation\r\n\r\n\t% gem install uirusu\r\n\t% uirusu [options]\r\n\r\n### Create your configuration file\r\n\t% uirusu --create-config\r\n\r\n### Edit your configuration file with API key\r\n\t% $EDITOR ~/.uirusu\r\n\r\n### Alternatively you can set Environment variables without a config file\r\n\t% export UIRUSU_VT_API_KEY=<YOUR_KEY_HERE>\r\n\t% export UIRUSU_VT_TIMEOUT=25\r\n\r\n## Usage\r\n\r\n### Searching a file of hashes\r\n\r\n\t% uirusu -f <file_with_hashes_one_per_line>\r\n\r\n### Searching a single hash\r\n\r\n\t% uirusu -h FD287794107630FA3116800E617466A9\r\n\r\n### Searching a file of hashes and outputting to XML\r\n\t% uirusu -f <file_with_hashes_one_per_line> -x\r\n\r\n### Upload a file to Virustotal and wait for analysis\r\n\t% uirusu -u </path/to/file>\r\n\r\n### Search for a single URL\r\n\t% uirusu -s \"http://www.google.com\"\r\n\r\n### Saving results to a file\r\n\t% uirusu -s \"http://www.google.com\" --yaml-output > file.yaml\r\n\r\n### Scan a directory and have them searched and save the results as json\r\n\t% uirusu -d /bin/ --json-output > file.json\r\n\r\n## API Usage\r\n```ruby\r\n#First you need to include the correct require files\r\nrequire 'uirusu'\r\n\r\nAPI_KEY = \"YOUR API KEY HERE\"\r\n\r\nhash = \"FD287794107630FA3116800E617466A9\" #Hash for a version of Poison Ivy\r\nurl = \"http://www.google.com\"\r\ncomment = \"Hey this is Poison Ivy, anyone have a copy of this binary?\"\r\n\r\n#To query a hash(sha1/sha256/md5)\r\nresults = Uirusu::VTFile.query_report(API_KEY, hash)\r\nresult = Uirusu::VTResult.new(hash, results)\r\nprint result.to_stdout if result != nil\r\n\r\n#To scan for a url\r\nresults = Uirusu::VTUrl.query_report(API_KEY, url)\r\nresult = Uirusu::VTResult.new(url, results)\r\nprint result.to_stdout if result != nil\r\n\r\n#To post a comment to a resource(url/hash/scan_id)\r\nresults = Uirusu::VTComment.post_comment(API_KEY, hash, comment)\r\nprint results if results != nil\r\n```\r\n\r\n### Private API Support\r\nPrivate API support is supported by the gem, but is not yet supported in the CLI application.\r\n\r\nNotes:\r\n* Details on the private API can be found [here](https://www.virustotal.com/en/documentation/private-api)\r\n* Optional parameters can be sent to the method calls as named parameters (see VTFile#query_report below)\r\n* #feed and #false_positive are currently not supported, as they require a special API key\r\n\r\n#### Examples\r\nBelow are some examples specific to the private API.\r\n\r\n##### Files\r\n```ruby\r\n# Search for a hash and get additional metadata\r\nUirusu::VTFile.query_report(API_KEY, hash, allinfo: 1)\r\n\r\n# Get a file upload URL for larger files\r\nUirusu::VTFile.scan_upload_url(API_KEY)\r\n\r\n# Submit a file with a callback URL\r\nUirusu::VTFile.scan_file(API_KEY, filepath, notify_url: 'http://requestb.in/117n0hb1')\r\n\r\n# Request a behavioural report on a hash\r\nUirusu::VTFile.behaviour(API_KEY, hash)\r\n\r\n# Request a network traffic report on a hash\r\nUirusu::VTFile.network_traffic(API_KEY, hash)\r\n```\r\n\r\n##### Domains and IPs\r\n```ruby\r\n\r\n# Get a report for a domain\r\nUirusu::VTDomain.query_report(API_KEY, domain)\r\n\r\n# Get a report for an IP address\r\nUirusu::VTIPAddr.query_report(API_KEY, ip)\r\n```\r\n\r\n##License\r\nUirusu is licensed under the MIT license see the `LICENSE` file for the full license.\r\n\r\n## Contact\r\nYou can reach the team at jacob.hammack[@]arxopia[dot]com, http://www.arxopia.com, or contact hammackj on IRC @ irc.freenode.net, #risu\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}